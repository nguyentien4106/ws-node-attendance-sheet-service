function handle(){
  const sheetNames = [#SHEET_NAMES]
  for(const name of sheetNames){
    const sheet = SpreadsheetApp.getActiveSpreadsheet().getSheetByName(name);
    Logger.log(sheet);
    if(sheet){
      processSheet(sheet);
    }
  }
  setupTrigger();
}

function processSheet(sheet) {
  const data = sheet.getDataRange().getValues(); // Lấy toàn bộ dữ liệu từ sheet
  const header = data[0]; // Lấy dòng tiêu đề
  const rows = data.slice(1); // Lấy dữ liệu (bỏ dòng tiêu đề)

  const deletedKeys = new Set(); // Lưu trữ các giá trị ô đầu tiên có "DELETED"

  // Bước 1: Tìm tất cả các giá trị ô đầu tiên của dòng có "DELETED"
  rows.forEach(row => {
    if (row[1] === "DELETED") {
      deletedKeys.add(row[0]); // Thêm giá trị ô đầu tiên vào danh sách
    }
  });

  // Bước 2: Loại bỏ các dòng có giá trị ô đầu tiên nằm trong deletedKeys
  const filteredRows = rows.filter(row => !deletedKeys.has(row[0]));

  // Bước 3: Loại bỏ trùng lặp, giữ lại dòng mới nhất
  const latestRows = new Map();
  filteredRows.forEach(row => {
    const key = row[0]; // Lấy giá trị ô đầu tiên
    if (key) {
      latestRows.set(key, row); // Ghi đè giá trị cũ nếu trùng
    }
  });

  // Bước 4: Chuyển Map thành mảng và sắp xếp lại theo cột đầu tiên
  const sortedRows = Array.from(latestRows.values()).sort((a, b) => {
    if (a[0] === b[0]) return 0;
    return a[0] < b[0] ? -1 : 1;
  });

  // Kết hợp dòng tiêu đề với các dòng đã sắp xếp
  const finalData = [header, ...sortedRows];

  // Xóa toàn bộ sheet
  sheet.clear();

  // Ghi lại dữ liệu đã xử lý vào sheet
  sheet.getRange(1, 1, finalData.length, finalData[0].length).setValues(finalData);

}

function setupTrigger() {
  const triggers = ScriptApp.getProjectTriggers(); // Lấy danh sách tất cả các trigger hiện tại
  const functionName = "handle"; // Tên hàm cần gắn trigger

  // Kiểm tra xem trigger đã tồn tại chưa
  const existingTrigger = triggers.find(trigger => trigger.getHandlerFunction() === functionName);

  if (!existingTrigger) {
    // Nếu chưa có trigger, tạo mới trigger
    ScriptApp.newTrigger(functionName)
      .forSpreadsheet(SpreadsheetApp.getActiveSpreadsheet()) // Liên kết với bảng tính hiện tại
      .onChange() // Kích hoạt trigger khi bảng tính được chỉnh sửa
      .create();

    Logger.log("Trigger added for function: " + functionName);
  } 
}

